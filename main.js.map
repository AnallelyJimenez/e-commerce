{"version":3,"sources":["./src/app/components/agregar-producto/agregar-producto.component.ts","./src/app/components/agregar-producto/agregar-producto.component.html","./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/components/details/details.component.ts","./src/app/components/details/details.component.html","./src/app/components/details/dialog-elements.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/routing/routing.module.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/components/orders/orders.component.html","./src/app/components/orders/orders.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-agregar-producto',\n  templateUrl: './agregar-producto.component.html',\n  styleUrls: ['./agregar-producto.component.styl']\n})\nexport class AgregarProductoComponent implements OnInit {\n\n  form = this.fb.group({\n    name: [null, Validators.required],\n    price: ['', Validators.required],\n    quantity: ['', Validators.required],\n    sku: ['', Validators.required]\n  });\n  \n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      // this.form.reset();\n      this.addItem();\n    }\n  }\n\n  addItem(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n    \n    this.dataService.addItem(this.form.value, id);;\n  }\n\n}\n","<article>\n    <div class=\"btn-group\">\n        <button mat-stroked-button type=\"button\" color=\"primary\" (click)=\" goBack()\">&#10229; Regresar</button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <fieldset>\n            <mat-form-field appearance=\"fill\" color=\"primary\">\n                <mat-label>Nombre</mat-label>\n                <input id=\"itemName\" matInput formControlName=\"name\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" floatLabel=\"always\">\n                <mat-label>Precio</mat-label>\n                <input matInput type=\"number\" class=\"example-right-align\" formControlName=\"price\" placeholder=\"0\">\n                <span matPrefix>$&nbsp;</span>\n                <span matSuffix>.00</span>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Cantidad</mat-label>\n                <input matInput type=\"number\" placeholder=\"0\" min=\"1\" formControlName=\"quantity\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" color=\"primary\">\n                <mat-label>Sku</mat-label>\n                <input matInput formControlName=\"sku\">\n            </mat-form-field>\n\n            <div class=\"btn-group align-center\">\n                <button type=\"submit\" mat-raised-button color=\"accent\">Agregar</button>\n            </div>\n        </fieldset>\n    </form>\n</article>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Order } from 'src/app/models/Order'\nimport { Item } from '../models/Item'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private api = 'https://eshop-deve.herokuapp.com/api/v2/orders';\n  \n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      Authorization: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJwUGFINU55VXRxTUkzMDZtajdZVHdHV3JIZE81cWxmaCIsImlhdCI6MTYyMDY2Mjk4NjIwM30.lhfzSXW9_TC67SdDKyDbMOYiYsKuSk6bG6XDE1wz2OL4Tq0Og9NbLMhb0LUtmrgzfWiTrqAFfnPldd8QzWvgVQ'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getOrders() {\n    return this.http.get<Order>(this.api, this.httpOptions);\n    \n    \n    //return this.http.get<Item>(this.api, this.httpOptions);\n  }\n\n  getOrder(id: number) {\n    const url = `${this.api}/${id}`;\n\n    return this.http.get<Order>(url, this.httpOptions);\n  }\n\n  addItem(item: any, id: number) {\n    const url = `${this.api}/${id}`;\n    const body = JSON.stringify(item);\n\n    console.log('id: ' + id)\n\n    return this.http.post(this.api, body, this.httpOptions);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\nimport { Item } from 'src/app/models/Item';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.styl']\n})\n\nexport class DetailsComponent implements OnInit {\n\n  items: Item[] = [];\n  order: any = {};\n  defaultImg: string = 'assets/images/img.png';\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private location: Location,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.getOrder()\n  }\n\n  getOrder(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n\n    this.dataService.getOrder(id)\n    .subscribe(\n      (data: any) => {\n        data.order.items.map((item: any) => {\n          if (!item.imageUrl) item.imageUrl = this.defaultImg;\n          this.items.push(item);\n\n        });\n        this.order.id = id;\n        this.order.number = data.order.number;\n      }\n    );\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    this.dialog.open(DialogElements, dialogConfig);\n  }\n}\n\n@Component({\n  selector: 'dialog-elements',\n  templateUrl: './dialog-elements.component.html',\n  styleUrls: ['./details.component.styl']\n})\nexport class DialogElements {\n\n  constructor(\n    public dialog: MatDialog\n  ) { }\n\n  closeDialog(){\n    this.dialog.closeAll()\n  }\n}\n","<section class=\"content\">\n    <div class=\"btn-group nav\">\n        <h1 class=\"title-order\">Orden {{order.number}}</h1>\n        <a mat-stroked-button color=\"primary\" routerLink=\"/agregar/{{order.id}}\">Agregar producto</a>\n    </div>\n    <section class=\"row\">\n        <mat-card class=\"card\" *ngFor=\"let item of items\">\n            <div class=\"grid\">\n                <div class=\"col-img\">\n                    <figure>\n                        <img mat-card-image [src]=\"item.imageUrl\" alt=\"{{item.name}}\">\n                        {{id}}\n                    </figure>\n                </div>\n                <div class=\"col-content\">\n                    <mat-card-content class=\"card-content\">\n                        <mat-card-title>{{item.name}}</mat-card-title>\n                        <h2 class=\"price\">${{item.price}}</h2>\n\n                        <p>Cantidad: {{item.quantity}}</p>\n                        <p>Sku: {{item.sku}}</p>\n                    </mat-card-content>\n                </div>\n            </div>\n        </mat-card>\n    </section>\n    <div class=\"btn-group align-center\">\n        <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"openDialog()\">Pagar</button>\n    </div>\n</section>\n","<figure class=\"success\">\r\n    <img src=\"assets/images/success.png\" alt=\"e-commers\">\r\n</figure>\r\n<h1 class=\"dialog-title\" mat-dialog-title>¡Pago completado exitosamente!</h1>\r\n<div class=\"dialog-content\" mat-dialog-content>Da clic en \"Terminar\" para seguir revisando los productos.</div>\r\n<div class=\"dialog-actions\" mat-dialog-actions>\r\n  <button mat-button mat-dialog-close color=\"primary\" (click)=\"closeDialog()\">Terminar</button>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'e-commerce';\n}\n","<mat-toolbar color=\"primary\">\r\n    <div>\r\n        <a mat-icon-button class=\"btn\" routerLink=\"/\">\r\n            <img src=\"assets/images/icon.png\" alt=\"{{title}}\">\r\n            <span>{{title}}</span>\r\n        </a>\r\n    </div>\r\n    <nav>\r\n        <a routerLink=\"/orden\"><span>Orden de compra</span></a>\r\n    </nav>\r\n</mat-toolbar>\r\n\r\n<section>\r\n    <router-outlet></router-outlet>\r\n</section>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrdersComponent } from '../components/orders/orders.component';\nimport { AgregarProductoComponent } from '../components/agregar-producto/agregar-producto.component';\nimport { DetailsComponent } from '../components/details/details.component';\n\nconst routes: Routes = [\n  { path: 'orden', component: OrdersComponent },\n  { path: 'agregar/:id', component: AgregarProductoComponent },\n  { path: 'orden-detalles/:id', component: DetailsComponent },\n  { path: '', redirectTo: '/orden', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { AppComponent } from './app.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { RoutingModule } from './routing/routing.module';\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    DetailsComponent,\n    AgregarProductoComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    RoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    HttpClientModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core'; \n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button'; \nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [],\n  exports: [\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatDialogModule\n  ]\n})\nexport class MaterialModule { }","<table>\n    <thead>\n        <tr>\n            <th>No.</th>\n            <th>Subtotal</th>\n            <th>Descuento</th>\n            <th>IVA</th>\n            <th>Total</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let order of orders\">\n            <td aria-label=\"No.\">{{order.number}}\n                <!-- <p>Precio: $ {{item.price}}</p>\n                <div [hidden] = \"item.hide\">\n                    <p>Cantidad {{item.quantity}}</p>\n                    <p>Sku: {{item.sku}}</p>\n                    \n                </div>\n                <button type=\"button\" (click)=\"toggle(item.id)\">Detalles</button> -->\n            </td>\n            <td aria-label=\"Subtotal:\">{{order.totals.subtotal}}</td>\n            <td aria-label=\"Descuento:\">{{order.totals.discount}}</td>\n            <td aria-label=\"IVA:\">{{order.totals.tax}}</td>\n            <td aria-label=\"Total:\"><span class=\"heading\">${{order.totals.total}}</span></td>\n            <td class=\"actions\">\n                <a mat-stroked-button color=\"primary\" routerLink=\"/orden-detalles/{{order.id}}\">Ver detalles</a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Order } from 'src/app/models/Order'\n// import { Item } from 'src/app/models/Item';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-pagos',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.styl']\n})\nexport class OrdersComponent implements OnInit {\n\n  //orden: string;\n  orders: Order[] = [];\n  // items: Item[] = [];\n\n  constructor( public dataService: DataService ) { }\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders() {\n\n    this.dataService.getOrders()\n    .subscribe(\n      (data: any) => {\n        data.orders.map((order: any) => {\n          order.hide = true;\n          this.orders.push(order);\n        });\n      }\n    );\n\n\n    \n    /*this.dataService.getOrders()\n    .subscribe(\n      (data: any) => {\n        data.order.items.map((item: any) => {\n          item.hide = true;\n          this.items.push(item);\n        });\n       console.log(this.items)\n\n      console.log(data)\n\n      this.orden = data.order.number;\n      }\n    );*/\n  }\n\n  /*toggle(id: string) {\n    this.items.map((item: any) => {\n      if (item.id === id) item.hide = !item.hide;\n    });\n  }*/\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}